                SQL-Ledger Accounting
                     Version 2.6


DESCRIPTION:
------------
SQL-Ledger is a double-entry accounting system written
in perl. It has been tested with PostgreSQL, Apache,
Netscape, Mozilla, Galeon, Explorer, Links, Lynx,
Konqueror, Voyager, W3M and Opera clients on Linux,
FreeBSD, Solaris, Windows, Mac computers and PDA's.

Data is stored in a SQL server, either locally or remote,
the display is through a text or GUI web browser. The system
is linked by a chart of accounts.  All transactions for AR,
AP and GL are stored in a transaction table. Hyper-links
from the chart of accounts let you view transactions posted
through AR, AP and GL.

Configuration files let you specify to which SQL server
to connect to, personal preferences such as company name,
language, number and date format, etc.

With the admin script you can create, edit or delete users,
create and delete datasets and set up the Chart of Accounts
and templates needed for the system.

You can have a group of users using the same dataset and
templates for generating Invoices, Income Statements and
Balance Sheets or a different set altogether.

Templates are supplied in html, text and tex format to
generate most of the forms. Forms can be printed to screen,
sent to a printer or e-mailed.


COPYRIGHT:
----------
Licensed under the terms of the GPL.


LATEST VERSION:
---------------
available from http://www.sql-ledger.org


PLATFORMS:
----------
Non specific, see requirements.


REQUIREMENTS:
-------------
1 - Perl, 5+
2 - http server (Apache, NCSA, httpi, thttpd, ...)
3 - SQL Server (PostgreSQL 7.1+)
4 - DBD (DBD-Pg)
5 - DBI
6 - LaTeX (optional)


FOREIGN LANGUAGE SUPPORT:
-------------------------
28 languages are supported. Language files are
ordinary text files, no special software is
required to change or add new translations.

Some of the translation files are not 100% complete.
If strings are missing, English is used instead.


INSTALLATION WITH setup.pl:
---------------------------
Make a directory

  mkdir /usr/local/sql-ledger

Copy setup.pl to /usr/local/sql-ledger

run setup.pl as root and follow the prompts.

  perl setup.pl

Go to the next step, "PREPARE YOUR SQL SERVER".

NOTE: If you are behind a firewall and cannot download
the code with setup.pl, download the source code and
pass the filename as an argument on the command line.

  perl setup.pl sql-ledger-2.6.x.tar.gz

VERY IMPORTANT: setup.pl tries to figure out your system
but it will not succeed if your distribution decided
to "hide" configuration files for your web server in some
other file.


INSTALLATION WITHOUT setup.pl:
------------------------------
unpack the tar.gz file in /usr/local

  tar xzvf sql-ledger-2.6.x.tar.gz

you should now have everything in /usr/local/sql-ledger

rename sql-ledger.conf.default to sql-ledger.conf

edit sql-ledger.conf

create a file sql-ledger-httpd.conf in the same location
where your httpd.conf is and copy the next section into the file

  Alias /sql-ledger /usr/local/sql-ledger/
  <Directory /usr/local/sql-ledger>
    AllowOverride All
    AddHandler cgi-script .pl
    AddDefaultCharset On
    Options ExecCGI Includes FollowSymlinks
    Order Allow,Deny
    Allow from All
  </Directory>

  <Directory /usr/local/sql-ledger/users>
    Order Deny,Allow
    Deny from All
  </Directory>

edit httpd.conf and add

  # SQL-Ledger
  Include /config_directory/sql-ledger-httpd.conf

Note: use an absolute or relative path to include
the configuration in your httpd.conf file.

i.e. /etc/httpd/sql-ledger-httpd.conf
     etc/apache2/sql-ledger-httpd.conf
     
restart your web server.


Note: /usr/local/sql-ledger is only a suggested
path, you may install in any directory.

Some versions of Apache 2.0 use a conf directory for
configuration files. If this is the case copy
sql-ledger-httpd.conf into this directory and leave
httpd.conf as is.


SET PERMISSION:
---------------
change directory to /usr/local/sql-ledger

# chown -hR nobody:nogroup users templates css spool

replace nobody:nogroup with the web server
user and group of your system. Some systems use
apache:apache, www, www-data, ...


PREPARE YOUR SQL SERVER:
------------------------

  PostgreSQL:
  -----------
  add one database user with create database and
  create user privileges to manage the datasets
  and tables for SQL-Ledger
  
  # su postgres
  $ createuser -d sql-ledger
  Shall the new user be allowed to create databases? (y/n) y
  Shall the new user be allowed to create more new users? (y/n) y
  
  if you use passwords to access postgres use this command
  $ createuser -d -P sql-ledger

  Install PL/PGSQL in template1

  # su postgres
  $ createlang plpgsql template1
  
  
SET UP A DATABASE AND TABLES:
-----------------------------
Load your web browser and connect to
http://localhost/sql-ledger/admin.pl

Select the "Database Administration" link,
enter a host, port and the user you created
in the previous step.

The "Create Dataset" link queries the server
for existing datasets and displays them in a
table. Enter a name for the new dataset (use
lowercase letters only!) and select one of the
Chart of Accounts and click on Continue.
Your new dataset and the tables will be created
and the selected Chart of Accounts loaded. The
owner of the tables will be the user you entered
in the previous screen as the "User".

The "Delete Dataset" link queries the server
for datasets which are in use by SQL-Ledger
and are not used by any members. This might
take a while to figure out. "Be patient".
If there are any datasets not in use, you get
a list of datasets.

You cannot manage any other datasets from this
interface, only the datasets used by SQL-Ledger.

POSTGRESQL: template1 is only used to query
the server, none of the information stored
in template1 is manipulated in any way.


SET UP A USER:
-------------
Load your web browser and connect to
http://localhost/sql-ledger/admin.pl

Click on "Add User". In the Database
section select the driver and enter
the user you used to create the dataset.


LOAD THE ACCOUNTING PROGRAM:
----------------------------
Load your web browser and connect to
http://localhost/sql-ledger/login.pl


UPGRADING TO A NEWER VERSION:
-----------------------------
1. load admin.pl and lock the system
2. untar the new version over top
3. check the doc directory for specific notes
4. load admin.pl and unlock the system
5. log in

NOTE: datasets are upgraded when you log in for
the first time. If an error occurs the system
will remain locked. Track down the error, fix it,
load admin.pl, unlock the system and log in again.


UPGRADING WITH setup.pl:
------------------------
run setup.pl from the command line and follow the prompts.


INSTALLATION CHECKLIST:
-----------------------
1. untar SL somewhere
2. change permission for the users, templates, css and spool directory
3. edit httpd.conf
4. edit sql-ledger.conf
5. add the database user sql-ledger
6. load admin.pl
7. create datasets for companies
8. add users

   In the Database section enter
   
   a) PostgreSQL
   
      Host:     for local connections leave blank
      Dataset:  the dataset created in step 7
      Port:     for local connections leave blank
      User:     sql-ledger
      Password: password for sql-ledger


IF SOMETHING DOESN'T WORK:
--------------------------
There is a FAQ at http://www.sql-ledger.org/misc/faq.html
or read the one included in the doc directory.

There are also several mailing lists at
http://www.sql-ledger.org/misc/mailinglist.html
where you can seek free help.

For commercial support see http://www.sql-ledger.com

=====================================================================
October 1, 2005

